// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asp.netDay2.Models;

#nullable disable

namespace asp.netDay2.Migrations
{
    [DbContext(typeof(ItiContext))]
    [Migration("20240814122806_AddUserToDatabase")]
    partial class AddUserToDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("asp.netDay2.Models.Course", b =>
                {
                    b.Property<int>("CrsId")
                        .HasColumnType("int")
                        .HasColumnName("Crs_Id");

                    b.Property<int?>("CrsDuration")
                        .HasColumnType("int")
                        .HasColumnName("Crs_Duration");

                    b.Property<string>("CrsName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Crs_Name");

                    b.Property<int?>("TopId")
                        .HasColumnType("int")
                        .HasColumnName("Top_Id");

                    b.HasKey("CrsId");

                    b.HasIndex("TopId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("asp.netDay2.Models.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("Dept_Id");

                    b.Property<string>("DeptDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Dept_Desc");

                    b.Property<string>("DeptLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Dept_Location");

                    b.Property<int?>("DeptManager")
                        .HasColumnType("int")
                        .HasColumnName("Dept_Manager");

                    b.Property<string>("DeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Dept_Name");

                    b.Property<DateOnly?>("ManagerHiredate")
                        .HasColumnType("date")
                        .HasColumnName("Manager_hiredate");

                    b.HasKey("DeptId");

                    b.HasIndex("DeptManager");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("asp.netDay2.Models.InsCourse", b =>
                {
                    b.Property<int>("InsId")
                        .HasColumnType("int")
                        .HasColumnName("Ins_Id");

                    b.Property<int>("CrsId")
                        .HasColumnType("int")
                        .HasColumnName("Crs_Id");

                    b.Property<string>("Evaluation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InsId", "CrsId");

                    b.HasIndex("CrsId");

                    b.ToTable("Ins_Course", (string)null);
                });

            modelBuilder.Entity("asp.netDay2.Models.Instructor", b =>
                {
                    b.Property<int>("InsId")
                        .HasColumnType("int")
                        .HasColumnName("Ins_Id");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("Dept_Id");

                    b.Property<string>("InsDegree")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ins_Degree");

                    b.Property<string>("InsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ins_Name");

                    b.Property<decimal?>("Salary")
                        .IsRequired()
                        .HasColumnType("money");

                    b.HasKey("InsId");

                    b.HasIndex("DeptId");

                    b.ToTable("Instructor", (string)null);
                });

            modelBuilder.Entity("asp.netDay2.Models.StudCourse", b =>
                {
                    b.Property<int>("CrsId")
                        .HasColumnType("int")
                        .HasColumnName("Crs_Id");

                    b.Property<int>("StId")
                        .HasColumnType("int")
                        .HasColumnName("St_Id");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.HasKey("CrsId", "StId");

                    b.HasIndex("StId");

                    b.ToTable("Stud_Course", (string)null);
                });

            modelBuilder.Entity("asp.netDay2.Models.Student", b =>
                {
                    b.Property<int>("StId")
                        .HasColumnType("int")
                        .HasColumnName("St_Id");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("Dept_Id");

                    b.Property<string>("StAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("St_Address");

                    b.Property<int?>("StAge")
                        .HasColumnType("int")
                        .HasColumnName("St_Age");

                    b.Property<string>("StFname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("St_Fname");

                    b.Property<string>("StLname")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("St_Lname")
                        .IsFixedLength();

                    b.Property<int?>("StSuper")
                        .HasColumnType("int")
                        .HasColumnName("St_super");

                    b.HasKey("StId");

                    b.HasIndex("DeptId");

                    b.HasIndex("StSuper");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("asp.netDay2.Models.Topic", b =>
                {
                    b.Property<int>("TopId")
                        .HasColumnType("int")
                        .HasColumnName("Top_Id");

                    b.Property<string>("TopName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Top_Name");

                    b.HasKey("TopId");

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("asp.netDay2.Models.Course", b =>
                {
                    b.HasOne("asp.netDay2.Models.Topic", "Top")
                        .WithMany("Courses")
                        .HasForeignKey("TopId")
                        .HasConstraintName("FK_Course_Topic");

                    b.Navigation("Top");
                });

            modelBuilder.Entity("asp.netDay2.Models.Department", b =>
                {
                    b.HasOne("asp.netDay2.Models.Instructor", "DeptManagerNavigation")
                        .WithMany("Departments")
                        .HasForeignKey("DeptManager")
                        .HasConstraintName("FK_Department_Instructor");

                    b.Navigation("DeptManagerNavigation");
                });

            modelBuilder.Entity("asp.netDay2.Models.InsCourse", b =>
                {
                    b.HasOne("asp.netDay2.Models.Course", "Crs")
                        .WithMany("InsCourses")
                        .HasForeignKey("CrsId")
                        .IsRequired()
                        .HasConstraintName("FK_Ins_Course_Course");

                    b.HasOne("asp.netDay2.Models.Instructor", "Ins")
                        .WithMany("InsCourses")
                        .HasForeignKey("InsId")
                        .IsRequired()
                        .HasConstraintName("FK_Ins_Course_Instructor");

                    b.Navigation("Crs");

                    b.Navigation("Ins");
                });

            modelBuilder.Entity("asp.netDay2.Models.Instructor", b =>
                {
                    b.HasOne("asp.netDay2.Models.Department", "Dept")
                        .WithMany("Instructors")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_Instructor_Department");

                    b.Navigation("Dept");
                });

            modelBuilder.Entity("asp.netDay2.Models.StudCourse", b =>
                {
                    b.HasOne("asp.netDay2.Models.Course", "Crs")
                        .WithMany("StudCourses")
                        .HasForeignKey("CrsId")
                        .IsRequired()
                        .HasConstraintName("FK_Stud_Course_Course");

                    b.HasOne("asp.netDay2.Models.Student", "St")
                        .WithMany("StudCourses")
                        .HasForeignKey("StId")
                        .IsRequired()
                        .HasConstraintName("FK_Stud_Course_Student");

                    b.Navigation("Crs");

                    b.Navigation("St");
                });

            modelBuilder.Entity("asp.netDay2.Models.Student", b =>
                {
                    b.HasOne("asp.netDay2.Models.Department", "Dept")
                        .WithMany("Students")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_Student_Department");

                    b.HasOne("asp.netDay2.Models.Student", "StSuperNavigation")
                        .WithMany("InverseStSuperNavigation")
                        .HasForeignKey("StSuper")
                        .HasConstraintName("FK_Student_Student");

                    b.Navigation("Dept");

                    b.Navigation("StSuperNavigation");
                });

            modelBuilder.Entity("asp.netDay2.Models.Course", b =>
                {
                    b.Navigation("InsCourses");

                    b.Navigation("StudCourses");
                });

            modelBuilder.Entity("asp.netDay2.Models.Department", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("asp.netDay2.Models.Instructor", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("InsCourses");
                });

            modelBuilder.Entity("asp.netDay2.Models.Student", b =>
                {
                    b.Navigation("InverseStSuperNavigation");

                    b.Navigation("StudCourses");
                });

            modelBuilder.Entity("asp.netDay2.Models.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
